/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Model_Khachhang;
import Model.Repository_KhachHang;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class KhachHang1 extends javax.swing.JFrame {

    private Repository_KhachHang repo = new Repository_KhachHang();
    private DefaultTableModel mol = new DefaultTableModel();
    private int index = -1;
    private BanHang banHang;

    /**
     * Creates new form KhachHang1
     */
    public KhachHang1(BanHang banHang) {
        this();
        this.banHang = banHang;
    }

    public KhachHang1() {
        initComponents();
        this.setLocationRelativeTo(this);
        this.banHang = banHang;
        this.fillTable(repo.getAll());
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        txt_timKiem1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handleTextChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                handleTextChange();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                handleTextChange();
            }

            private void handleTextChange() {
                String timKiem = txt_timKiem1.getText().trim();
                if (timKiem.isEmpty()) {
                    // Nếu ô tìm kiếm trống, hiển thị toàn bộ dữ liệu
                    fillTable(repo.getAll());
                }
                // Không tìm kiếm tự động khi nhập, chờ người dùng nhấn nút "Tìm kiếm"
            }
        });
    }

    void fillTable(ArrayList<Model_Khachhang> List1) {
        mol = (DefaultTableModel) tbl_khachHang1.getModel();
        mol.setRowCount(0);
      
        for (Model_Khachhang u : List1) {
            Object [] row={
              
                u.getMaKH(),
                u.getTenKH(),
               
               
                u.getSdtKH(),
              
            };
            mol.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_khachHang1 = new javax.swing.JTable();
        btn_timKiem1 = new javax.swing.JButton();
        txt_timKiem1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_khachHang1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã KH", "Tên KH", "SĐT"
            }
        ));
        tbl_khachHang1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_khachHang1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_khachHang1);

        btn_timKiem1.setText("Tìm kIếm");
        btn_timKiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timKiem1ActionPerformed(evt);
            }
        });

        txt_timKiem1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_timKiem1CaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btn_timKiem1)
                        .addGap(18, 18, 18)
                        .addComponent(txt_timKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_timKiem1)
                    .addComponent(txt_timKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_timKiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timKiem1ActionPerformed
        String timKiem = txt_timKiem1.getText().trim(); // .trim() để loại bỏ khoảng trắng thừa

        if (timKiem.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã khách hàng để tìm kiếm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Model_Khachhang khachHang = repo.getByMaKhachHang(timKiem);
        if (khachHang != null) {
            ArrayList<Model_Khachhang> list = new ArrayList<>();
            list.add(khachHang);
            fillTable(list);
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với mã: " + timKiem, "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) tbl_khachHang1.getModel();
            model.setRowCount(0);
        }
    }//GEN-LAST:event_btn_timKiem1ActionPerformed

    private void tbl_khachHang1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_khachHang1MouseClicked
        // TODO add your handling code here:
        int row = tbl_khachHang1.getSelectedRow();
        if (row != -1) {
            String maKH = tbl_khachHang1.getValueAt(row, 0).toString();
            String tenKH = tbl_khachHang1.getValueAt(row, 1).toString();
            String sdt = tbl_khachHang1.getValueAt(row, 2).toString();

            // Cap nhap cho ban hang
            if (banHang != null) {
                banHang.setSelectKhachHang(maKH, tenKH, sdt);
            }

            dispose();
        }

    }//GEN-LAST:event_tbl_khachHang1MouseClicked

    private void txt_timKiem1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_timKiem1CaretUpdate
        // TODO add your handling code here:
//        String timKiem = txt_timKiem1.getText().trim(); // .trim() để loại bỏ khoảng trắng thừa
//
//        if (timKiem.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã khách hàng để tìm kiếm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//        Model_Khachhang khachHang = repo.getByMaKhachHang(timKiem);
//        if (khachHang != null) {
//            ArrayList<Model_Khachhang> list = new ArrayList<>();
//            list.add(khachHang);
//            fillTable(list);
//        } else {
//            JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với mã: " + timKiem, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//
//            DefaultTableModel model = (DefaultTableModel) tbl_khachHang1.getModel();
//            model.setRowCount(0);
//        }
    }//GEN-LAST:event_txt_timKiem1CaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachHang1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachHang1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachHang1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachHang1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhachHang1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_timKiem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_khachHang1;
    private javax.swing.JTextField txt_timKiem1;
    // End of variables declaration//GEN-END:variables
    private void initTableEvents() {
        tbl_khachHang1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    selectCustomerAndClose();
                }
            }
        });
    }

    private void selectCustomerAndClose() {
        int row = tbl_khachHang1.getSelectedRow();
        if (row != -1) {
            String maKH = tbl_khachHang1.getValueAt(row, 0).toString();
            String tenKH = tbl_khachHang1.getValueAt(row, 1).toString();
            String sdt = tbl_khachHang1.getValueAt(row, 2).toString();

            if (banHang != null) {
                banHang.setSelectKhachHang(maKH, tenKH, sdt);
            }

            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng!");
        }
    }

}
